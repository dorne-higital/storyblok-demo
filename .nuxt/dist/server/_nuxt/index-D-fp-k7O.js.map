{"version":3,"file":"index-D-fp-k7O.js","sources":["../../../../node_modules/nuxt/dist/app/composables/state.js","../../../../node_modules/@storyblok/nuxt/dist/runtime/composables/useAsyncStoryblok.mjs","../../../../pages/index.vue"],"sourcesContent":["import { isRef, toRef } from \"vue\";\nimport { useNuxtApp } from \"../nuxt.js\";\nimport { toArray } from \"../utils.js\";\nconst useStateKeyPrefix = \"$s\";\nexport function useState(...args) {\n  const autoKey = typeof args[args.length - 1] === \"string\" ? args.pop() : void 0;\n  if (typeof args[0] !== \"string\") {\n    args.unshift(autoKey);\n  }\n  const [_key, init] = args;\n  if (!_key || typeof _key !== \"string\") {\n    throw new TypeError(\"[nuxt] [useState] key must be a string: \" + _key);\n  }\n  if (init !== void 0 && typeof init !== \"function\") {\n    throw new Error(\"[nuxt] [useState] init must be a function: \" + init);\n  }\n  const key = useStateKeyPrefix + _key;\n  const nuxtApp = useNuxtApp();\n  const state = toRef(nuxtApp.payload.state, key);\n  if (state.value === void 0 && init) {\n    const initialValue = init();\n    if (isRef(initialValue)) {\n      nuxtApp.payload.state[key] = initialValue;\n      return initialValue;\n    }\n    state.value = initialValue;\n  }\n  return state;\n}\nexport function clearNuxtState(keys) {\n  const nuxtApp = useNuxtApp();\n  const _allKeys = Object.keys(nuxtApp.payload.state).map((key) => key.substring(useStateKeyPrefix.length));\n  const _keys = !keys ? _allKeys : typeof keys === \"function\" ? _allKeys.filter(keys) : toArray(keys);\n  for (const _key of _keys) {\n    const key = useStateKeyPrefix + _key;\n    if (key in nuxtApp.payload.state) {\n      nuxtApp.payload.state[key] = void 0;\n    }\n  }\n}\n","import { useStoryblokApi, useStoryblokBridge } from \"@storyblok/vue\";\nimport { useState, onMounted } from \"#imports\";\nexport const useAsyncStoryblok = async (url, apiOptions = {}, bridgeOptions = {}) => {\n  const uniqueKey = `${JSON.stringify(apiOptions)}${url}`;\n  const story = useState(`${uniqueKey}-state`);\n  const storyblokApiInstance = useStoryblokApi();\n  onMounted(() => {\n    if (story.value && story.value.id) {\n      useStoryblokBridge(\n        story.value.id,\n        (evStory) => story.value = evStory,\n        bridgeOptions\n      );\n    }\n  });\n  if (!story.value) {\n    const { data } = await storyblokApiInstance.get(\n      `cdn/stories/${url}`,\n      apiOptions\n    );\n    story.value = data.story;\n  }\n  ;\n  return story;\n};\n","<script setup>\nconst story = await useAsyncStoryblok('home', { version: 'draft' },\n{ customParent: 'https://app.storyblok.com' })\n</script>\n\n<template>\n  <StoryblokComponent v-if=\"story\" :blok=\"story.content\" />\n</template>\n"],"names":["useStoryblokApi","_withAsyncContext"],"mappings":";;;;;;;;;;;;;;;;AAGA,MAAM,oBAAoB;AACnB,SAAS,YAAY,MAAM;AAChC,QAAM,UAAU,OAAO,KAAK,KAAK,SAAS,CAAC,MAAM,WAAW,KAAK,IAAK,IAAG;AACzE,MAAI,OAAO,KAAK,CAAC,MAAM,UAAU;AAC/B,SAAK,QAAQ,OAAO;AAAA,EACrB;AACD,QAAM,CAAC,MAAM,IAAI,IAAI;AACrB,MAAI,CAAC,QAAQ,OAAO,SAAS,UAAU;AACrC,UAAM,IAAI,UAAU,6CAA6C,IAAI;AAAA,EACtE;AACD,MAAI,SAAS,UAAU,OAAO,SAAS,YAAY;AACjD,UAAM,IAAI,MAAM,gDAAgD,IAAI;AAAA,EACrE;AACD,QAAM,MAAM,oBAAoB;AAChC,QAAM,UAAU;AAChB,QAAM,QAAQ,MAAM,QAAQ,QAAQ,OAAO,GAAG;AAC9C,MAAI,MAAM,UAAU,UAAU,MAAM;AAClC,UAAM,eAAe;AACrB,QAAI,MAAM,YAAY,GAAG;AACvB,cAAQ,QAAQ,MAAM,GAAG,IAAI;AAC7B,aAAO;AAAA,IACR;AACD,UAAM,QAAQ;AAAA,EACf;AACD,SAAO;AACT;AC1BO,MAAM,oBAAoB,OAAO,KAAK,aAAa,CAAA,GAAI,gBAAgB,CAAA,MAAO;AACnF,QAAM,YAAY,GAAG,KAAK,UAAU,UAAU,CAAC,GAAG,GAAG;AACrD,QAAM,QAAQ,SAAS,GAAG,SAAS,QAAQ;AAC3C,QAAM,uBAAuBA;AAU7B,MAAI,CAAC,MAAM,OAAO;AAChB,UAAM,EAAE,KAAI,IAAK,MAAM,qBAAqB;AAAA,MAC1C,eAAe,GAAG;AAAA,MAClB;AAAA,IACN;AACI,UAAM,QAAQ,KAAK;AAAA,EACpB;AAED,SAAO;AACT;;;;;;ACvBA,UAAM,SAAc,CAAA,QAAA,SAAA,IAAAC,iBAAA,MAAA;AAAA,MAAkB;AAAA,MAAQ,EAAE,SAAS,QAAS;AAAA,MAClE,EAAE,cAAc,4BAA2B;AAAA,IAAE,CAAA;;;;;;;;;;;;;;;;;;;","x_google_ignoreList":[0,1]}